{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashig\\\\OneDrive\\\\Desktop\\\\weather-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport UilReact from '@iconscout/react-unicons/icons/uil-react';\nimport Inputs from './components/page-1/Inputs';\nimport Image from './components/page-1/Image';\nimport HourlyForecast from './components/page-1/HourlyForecast';\nimport TimeLoc from './components/page-1/TimeLoc';\nimport getWeatherData from './services/WeatherService';\nimport getFormattedWeatherData from './services/WeatherService';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [query, setQuery] = useState({\n    q: \"chandigarh\"\n  });\n  const [units, setUnits] = useState(\"metric\");\n  const [weather, setWeather] = useState(null);\n  useEffect(() => {\n    const fetchWeather = async () => {\n      await getFormattedWeatherData({\n        ...query,\n        units\n      }).then(data => {\n        setWeather(data);\n      });\n    };\n    fetchWeather();\n  }, [query, units]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mx-auto max-w-screen-2xs mt-4 py-5 px-32 bg-gradient-to-br from-slate-500 to-stone-900  h-fit shadow-xl shadown-gray-400\",\n    children: [/*#__PURE__*/_jsxDEV(Inputs, {\n      setQuery: setQuery,\n      units: units,\n      setUnits: setUnits\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), weather && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TimeLoc, {\n        weather: weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        weather: weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(HourlyForecast, {\n        title: \"hourly forecast\",\n        items: weather.hourly\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QGFebkwemw0oBph9VuJCChKLd8g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["UilReact","Inputs","Image","HourlyForecast","TimeLoc","getWeatherData","getFormattedWeatherData","useEffect","useState","App","query","setQuery","q","units","setUnits","weather","setWeather","fetchWeather","then","data","hourly"],"sources":["C:/Users/ashig/OneDrive/Desktop/weather-app/src/App.js"],"sourcesContent":["import './App.css';\nimport UilReact from '@iconscout/react-unicons/icons/uil-react'\nimport Inputs from './components/page-1/Inputs';\nimport Image from './components/page-1/Image';\nimport HourlyForecast from './components/page-1/HourlyForecast';\nimport TimeLoc from './components/page-1/TimeLoc';\nimport getWeatherData from './services/WeatherService';\nimport getFormattedWeatherData from './services/WeatherService';\nimport {useEffect, useState } from 'react';\n\n\nfunction App() {\n  const [query, setQuery] = useState({ q: \"chandigarh\" });\n  const [units, setUnits] = useState(\"metric\");\n  const [weather, setWeather] = useState(null);\n\n  useEffect(() => {\n  const fetchWeather = async () => {\n   await getFormattedWeatherData({...query,units  }).then(\n    (data) => {\n      setWeather(data);\n    });\n  };\n  fetchWeather();\n}, [query , units] )\n\n  return (\n    <div className='mx-auto max-w-screen-2xs mt-4 py-5 px-32 bg-gradient-to-br from-slate-500 to-stone-900  h-fit shadow-xl shadown-gray-400'>\n      <Inputs setQuery={setQuery} units={units} setUnits={setUnits} />\n      {weather && (\n        <div>\n          <TimeLoc weather={weather}/>\n      <Image weather={weather}/>\n      <HourlyForecast title=\"hourly forecast\" items={weather.hourly}/>\n        </div>\n      )}\n      \n      </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,QAAQ,MAAM,0CAA0C;AAC/D,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,KAAK,MAAM,2BAA2B;AAC7C,OAAOC,cAAc,MAAM,oCAAoC;AAC/D,OAAOC,OAAO,MAAM,6BAA6B;AACjD,OAAOC,cAAc,MAAM,2BAA2B;AACtD,OAAOC,uBAAuB,MAAM,2BAA2B;AAC/D,SAAQC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAG3C,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC;IAAEI,CAAC,EAAE;EAAa,CAAC,CAAC;EACvD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,QAAQ,CAAC;EAC5C,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IAChB,MAAMU,YAAY,GAAG,YAAY;MAChC,MAAMX,uBAAuB,CAAC;QAAC,GAAGI,KAAK;QAACG;MAAO,CAAC,CAAC,CAACK,IAAI,CACpDC,IAAI,IAAK;QACRH,UAAU,CAACG,IAAI,CAAC;MAClB,CAAC,CAAC;IACJ,CAAC;IACDF,YAAY,EAAE;EAChB,CAAC,EAAE,CAACP,KAAK,EAAGG,KAAK,CAAC,CAAE;EAElB,oBACE;IAAK,SAAS,EAAC,0HAA0H;IAAA,wBACvI,QAAC,MAAM;MAAC,QAAQ,EAAEF,QAAS;MAAC,KAAK,EAAEE,KAAM;MAAC,QAAQ,EAAEC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAG,EAC/DC,OAAO,iBACN;MAAA,wBACE,QAAC,OAAO;QAAC,OAAO,EAAEA;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAE,eAChC,QAAC,KAAK;QAAC,OAAO,EAAEA;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAE,eAC1B,QAAC,cAAc;QAAC,KAAK,EAAC,iBAAiB;QAAC,KAAK,EAAEA,OAAO,CAACK;MAAO;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QAE/D;EAAA;IAAA;IAAA;IAAA;EAAA,QAEK;AAEZ;AAAC,GA5BQX,GAAG;AAAA,KAAHA,GAAG;AA8BZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}